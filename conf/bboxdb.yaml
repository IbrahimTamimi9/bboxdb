######
# BBoxDB configuration YAML 
######

###
# Storage
###

# The directories where BBoxDB stores the data on disk.	Data
# is spread across all directories
# Default: /tmp/bboxdb
# storageDirectories: 
#   - /tmp/bboxdb

# Max entries per memtable 
# Default: 10000 entries
# memtableEntriesMax: 10000

# Max size per memtable in bytes
# Default: 128 MB
# memtableSizeMax: 134217728

# Start a thread to compact SSTables
# Default: true
# storageRunCompactThread: true

# Start a thread to flush full memtables to disk
# When disabled, all data stays in memory
# Default: true
# storageRunMemtableFlushThread: true

# The classname of the spatial indexer factory
# When disabled, full table scans are performed
# for orthogonal spatial queries.
#
# Note: Changing this value on an existing storage
#       can lead to unexpected behavior.
#
# Possible values: 
#
# org.bboxdb.storage.sstable.spatialindex.rtree.RTreeSpatialIndexStrategy
#
# Default: org.bboxdb.storage.sstable.spatialindex.rtree.RTreeSpatialIndexStrategy
# storageSpatialIndexerFactory: org.bboxdb.storage.sstable.spatialindex.rtree.RTreeSpatialIndexStrategy

# Checkpoint interval in seconds . After this interval, still open in 
# memory tables will be written to disk.
# 
# Possible values: 0-999999
# 0 - Disable the snapshot thread
# 1-999999 - Value in seconds how long data can stay in memory
#
# Default: 1800 seconds
# storageCheckpointInterval: 1800

###
# Network
###

# The port to listen for incoming network connections
# Default: 50505
# networkListenPort: 50505

# The number of threads to handle network connections
# Default: 10
# networkConnectionThreads: 10

###
# Distribution
###

# The name of the cluster
clustername: mycluster

# The addresses (hostname:port) of the zookeeper nodes
zookeepernodes: ['node1:2181', 'node2:2181', 'node3:2181']

# The IP address of the local node. This IP address 
# is published in zookeeper and is used for incoming 
# connections from other bboxdb instances.
#
# Default: the first IP address of the local node
# localip: 10.10.10.10

# The region split strategy
#
# At the moment, two strategies are available. The simpleSplitStragety splits a region into two 
# equal pices. The weightBasedSplitStrategy uses samples to split a region into two parts
# with the same amount of objects in both regions.
#
# simpleSplitStragety: org.bboxdb.distribution.regionsplit.SimpleSplitStrategy
# weightBasedSplitStrategy: org.bboxdb.distribution.regionsplit.WeightBasedSplitStrategy
#
# Default: org.bboxdb.distribution.regionsplit.WeightBasedSplitStrategy
# regionSplitStrategy: org.bboxdb.distribution.regionsplit.WeightBasedSplitStrategy

# The max size of a region in bytes
# Default: 256MB
# regionMaxSize: 268435456

# The resource placement strategy
# Default: org.bboxdb.distribution.placement.RandomResourcePlacementStrategy
# 
# Supported values:
# org.bboxdb.distribution.placement.RandomResourcePlacementStrategy
# org.bboxdb.distribution.placement.RoundRobinResourcePlacementStrategy
# org.bboxdb.distribution.placement.LowUtilizationResourcePlacementStrategy
#
# resourcePlacementStrategy: org.bboxdb.distribution.placement.RandomResourcePlacementStrategy

